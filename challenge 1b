function [db, out_img] = compute2DProperties(orig_img, labeled_img)
numObjects = max(labeled_img,[],'all'); %Number of objects in image
db = zeros(6,numObjects);   %Create matrix with size 6x(No. of objects in img)
out_img = orig_img;

for i = 1:numObjects
    db(1,i) = i;    %Fill in Object Label in the first row
    
    [row,col] = find(labeled_img == i);

    n = size(row, 1);
    m = size(col, 1);
    
    area = n*m;
    
    xbar = 0;
    ybar = 0;

    for i=1:n
        for j = 1:m
            ybar = ybar + row(j);
        end
    end
    
    ybar = ybar/area;

    for i=1:n
        for j = 1:m
            ybar = ybar + col(i);
        end
    end
    
    xbar = xbar / area;
    
    db(2,i) = ybar; %Row position of center
    db(3,i) = xbar; %Column position of center
    
    a = 0;
    b = 0;
    c = 0;
    
    for i=1:n
        for j = 1:m
            a = a + (col(i) - xbar)^2;
        end
    end
    
    for i=1:n
        for j = 1:m
            b = b + (col(i) - xbar)*(row(j) - ybar);
        end
    end
    
    b = b * 2;
    
    for i=1:n
        for j = 1:m
            c = c + (row(j) - ybar)^2;
        end
    end
    
    theta1 = atan2(b, a-c) / 2; %Theta that gives minimum of E
    theta2 = theta1 + pi / 2; %Theta that gives maximum of E
    
    db(5,i) = theta1; %Orientation
    
    Emin = a*(sin(theta1))^2 - b*sin(theta1) + c*(cos(theta1))^2;
    Emax = a*(sin(theta2))^2 - b*sin(theta2) + c*(cos(theta2))^2;
    
    db(4,i) = Emin; %Minimum moment of inertia
    db(6,i) = Emin/Emax; %Roundness
end
